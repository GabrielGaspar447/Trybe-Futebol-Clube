on: [push, pull_request]

jobs:
  ESLint:
    runs-on: ubuntu-latest
    steps:
    - name: Fetch repository
      uses: actions/checkout@v2

    - name: Install node
      uses: actions/setup-node@v1

    - name: Install dependencies
      run: npm install
      working-directory: ./backend

    - name: Run ESLint check
      run: npx eslint .
      working-directory: ./backend

  Tests:
    runs-on: ubuntu-latest
    needs: [ESLint]
    steps:
    - name: Fetch repository
      uses: actions/checkout@v2

    - name: Start containers
      run: docker-compose up --build -d

    - name: Run tests
      run: docker-compose exec -T backend npm test

    - name: Stop containers
      if: always()
      run: docker-compose down --rmi all --volumes --remove-orphans

  Docker:
    runs-on: ubuntu-latest
    needs: [Tests]
    steps:
    - name: Fetch repository
      uses: actions/checkout@v2

    - name: Build & push backend
      uses: mr-smithers-excellent/docker-build-push@v5
      with:
        image: gabrielgaspar447/tfc_backend
        registry: registry-url.io
        directory: backend
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build & push frontend
      uses: mr-smithers-excellent/docker-build-push@v5
      with:
        image: gabrielgaspar447/tfc_frontend
        registry: docker.io
        directory: frontend
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}